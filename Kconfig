#
# Copyright (c) 2023 Nordic Semiconductor ASA
#
# SPDX-License-Identifier: LicenseRef-Nordic-5-Clause
#

menuconfig SIDEWALK
	bool "Enable Amazon Sidewalk"
	imply SIDEWALK_DFU

if SIDEWALK

# General
choice SIDEWALK_LINK_MASK
	prompt "Physical link type"
	default SIDEWALK_LINK_MASK_BLE
	help
	  Select the physical link type for Sidewalk connection.

config SIDEWALK_LINK_MASK_BLE
	bool "Bluetooth Low Energy link"

config SIDEWALK_LINK_MASK_FSK
	bool "Sub-GHz link for FSK"

config SIDEWALK_LINK_MASK_LORA
	bool "Sub-GHz link for LORA"

endchoice # SIDEWALK_LINK_MASK

config SIDEWALK_THREAD_STACK_SIZE
	int "Stack size for the Sidewalk thread"
	range 8192 131072
	default 8192
	help
	  Set the internal stack size for Sidewalk thread.

config SIDEWALK_THREAD_QUEUE_SIZE
	int "Message queue size for the Sidewalk thread"
	range 4 256
	default 10
	help
	  Set the message queue size for the Sidewalk thread.

config SIDEWALK_THREAD_PRIORITY
	int "Priority of the Sidewalk thread"
	range -16 14
	default 14
	help
	  Priority at which the Sidewalk thread runs.

config SIDEWALK_HEAP_SIZE
	int "Heap size for Sidewalk utils"
	default 1024 if SIDEWALK_ACE_OSAL_ZEPHYR
	default 0
	help
	  Set the heap size for dynamic memory alocation in Sidewalk.

# Log
config SIDEWALK_LOG_MSG_LENGTH_MAX
	int "Log message max length"
	default 80
	help
	  Maxium message length for Sidewalk PAL log in bytes.

module = SIDEWALK
module-str = Amazon Sidewalk
source "${ZEPHYR_BASE}/subsys/logging/Kconfig.template.log_config"

module = SIDEWALK_CRYPTO
module-str = Amazon Sidewalk Crypto
source "${ZEPHYR_BASE}/subsys/logging/Kconfig.template.log_config"

module = SIDEWALK_BLE_ADAPTER
module-str = Sidewalk BLE interface
source "${ZEPHYR_BASE}/subsys/logging/Kconfig.template.log_config"

module = SPI_BUS
module-str = Sidewalk spi bus interface
source "${ZEPHYR_BASE}/subsys/logging/Kconfig.template.log_config"

# BLE
config DEPRECATED_SIDEWALK_BLE_MAC_ADDR_TYPE
	bool "Enable depricated Sidewalk BLE MAC addres type choice"
	help
	  The BLE MAC address type can be set using NCS configs.
	  By default Sidewalk will use private random address.

if DEPRECATED_SIDEWALK_BLE_MAC_ADDR_TYPE
choice SIDEWALK_BLE_MAC_ADDR_TYPE
	prompt "BLE MAC address type"
	default MAC_ADDRESS_TYPE_RANDOM_PRIVATE_RESOLVABLE

config MAC_ADDRESS_TYPE_PUBLIC
	bool "Public Address"
	help
	   Address obtained from IEEE registration authority, no privacy.

config MAC_ADDRESS_TYPE_RANDOM_PRIVATE_NON_RESOLVABLE
	bool "Random Private Non-Resolvable Address"
	imply BT_SMP
	help
	   Random generated address non resolvable by remote
	   changes on every advertisement or connection.

config MAC_ADDRESS_TYPE_STATIC_RANDOM
	bool "Random Static Address"
	help
	   Random generated address changes on each device boot up or
	   stay fixed for lifetime of device.

config MAC_ADDRESS_TYPE_RANDOM_PRIVATE_RESOLVABLE
	bool "Random Private Resolvable Address"
	imply BT_SMP
	imply BT_PRIVACY
	help
	   Random generated address with IRK(Identity Resolving Key)
	   resolvable by remote. Used when bonding is enabled.

endchoice # SIDEWALK_BLE_MAC_ADDR_TYPE

if MAC_ADDRESS_TYPE_PUBLIC
config SID_BT_PUB_ADDR
	string "Public MAC address for controller"
	default "AA:FF:BB:EE:CC:DD"
	help
	  Specify a MAC address for the BLE interface in the form of
	  six hex 8-bit chars separated by colons (e.g.:AA:BB:CC:DD:EE:FF).
endif # MAC_ADDRESS_TYPE_PUBLIC

endif # DEPRECATED_SIDEWALK_BLE_MAC_ADDR_TYPE

config SIDEWALK_BLE_ADV_INT_PRECISION
	int "Precision of advertisement interval in ms"
	range 1 1000
	default 5

config SIDEWALK_BLE_ADV_INT_FAST
	int "Fast advertise interval in ms"
	range 20 10240
	default 160

config SIDEWALK_BLE_ADV_INT_SLOW
	int "Slow advertise interval in ms"
	range 20 10240
	default 1000

config SIDEWALK_BLE_ADV_INT_TRANSITION
	int "Duration of fast advertisement after sid_start in seconds"
	range 1 2147483647
	default 30

config SIDEWALK_VENDOR_SERVICE
	bool "Enable Sidewalk BLE vendor service"

config SIDEWALK_LOGGING_SERVICE
	bool "Enable Sidewalk BLE logging service"

# DFU
menuconfig SIDEWALK_DFU
	bool "DFU service in Sidewalk sample"

if SIDEWALK_DFU

choice SIDEWALK_DFU_SERVICE
	prompt "DFU image upload transport"
	default SIDEWALK_DFU_SERVICE_BLE

config SIDEWALK_DFU_SERVICE_BLE
	bool "Upload image over BLE"

endchoice # SIDEWALK_DFU_SERVICE
endif # SIDEWALK_DFU

config SIDEWALK_PAL_RADIO_SOURCE
	bool "Build sub-GHz radio driver from sources [EXPERIMENTAL]"
	select EXPERIMENTAL

rsource "Kconfig.dependencies"
rsource "utils/Kconfig"

endif # SIDEWALK
