#
# Copyright (c) 2022 Nordic Semiconductor ASA
#
# SPDX-License-Identifier: LicenseRef-Nordic-4-Clause
#

menuconfig SIDEWALK
	bool "Enable Amazon Sidewalk [EXPERIMENTAL]"
	imply SIDEWALK_ASSERT
	imply SIDEWALK_BLE
	imply SIDEWALK_CRYPTO 
	imply SIDEWALK_LOG
	imply SIDEWALK_MFG_STORAGE
	imply SIDEWALK_STORAGE
	imply SIDEWALK_TIMER
	imply SIDEWALK_UPTIME
	imply SIDEWALK_CRITICAL_REGION
	imply SIDEWALK_ACE_OSAL_ZEPHYR

config SIDEWALK_ASSERT
	bool "Enable Sidewalk assert module."
	imply ASSERT
	help
	  This enables the SID_PAL_ASSERT() macro in the Sidewalk pal code.
	  If the assertion fails, program will trigger a fatal error.

config SIDEWALK_BLE
	imply BT
	imply SETTINGS
	imply BT_PERIPHERAL
	imply BT_GATT_CLIENT
	bool "Enable Sidewalk Bluetooth Low Energy (BLE) module"

if SIDEWALK_BLE

choice SIDEWALK_BLE_ADV_INT
	prompt "BLE advertising interval timers"
	default BLE_ADV_FAST_INT_100_150_MS

config BLE_ADV_FAST_INT_30_60_MS
	bool "MIN/MAX: 30/60 ms"

config BLE_ADV_FAST_INT_100_150_MS
	bool "MIN/MAX: 100/150 ms"

config BLE_ADV_SLOW_INT_1000_1200_MS
	bool "MIN/MAX: 1/1.2 s"
endchoice # SIDEWALK_BLE_ADV_INT

config SIDEWALK_VENDOR_SERVICE
	bool "Enable vendor service"
	default n
	help
	   "Enables the vendor service for Sidewalk."

config SIDEWALK_LOGGING_SERVICE
	bool "Enable logging service"
	default n
	help
	   "Enables the logging service for Sidewalk."

endif # SIDEWALK_BLE

choice SIDEWALK_LINK_MASK
	prompt "Physical link type"
	default SID_BLE_LM
	help
	  Select the physical link type for Sidewalk connection.

config SID_BLE_LM
	bool "Bluetooth Low Energy link"
	depends on SIDEWALK_BLE

config SID_FSK_LM
	bool "900 MHz link for FSK"

config SID_LORA_LM
	bool "900 MHz link for LORA"

endchoice # SIDEWALK_LINK_MASK

config SIDEWALK_THREAD_STACK_SIZE
	int "Stack size for the Sidewalk thread"
	range 8192 131072 if SID_BLE_LM
	range 512 131072
	default 8192 if SID_BLE_LM
	default 512
	help
	  Set the internal stack size for Sidewalk thread.

config SIDEWALK_THREAD_QUEUE_SIZE
	int "Message queue size for the Sidewalk thread"
	range 4 256
	default 10
	help
	  Set the message queue size for the Sidewalk thread.

config SIDEWALK_THREAD_PRIORITY
	int "Priority of the Sidewalk thread"
	default 14
	range -16 14
	help
	  Priority at which the Sidewalk thread runs.

config SIDEWALK_HEAP_SIZE
	int "Heap size for Sidewalk utils"
	default 1024 if SIDEWALK_ACE_OSAL_ZEPHYR
	default 0
	help
	  Set the heap size for dynamic memory alocation in Sidewalk.

config SIDEWALK_CRYPTO
	bool "Enable Sidewalk security module"
	imply NRF_SECURITY
	imply MBEDTLS_PSA_CRYPTO_C
	imply MBEDTLS_USE_PSA_CRYPTO
	imply PSA_CRYPTO_DRIVER_CC3XX
	imply PSA_WANT_ALG_HMAC
	imply PSA_WANT_ALG_CTR
	imply PSA_WANT_ALG_CCM
	imply PSA_WANT_ALG_GCM
	imply PSA_WANT_ALG_CMAC
	imply PSA_WANT_ALG_SHA_256
	imply PSA_WANT_ALG_SHA_512
	imply PSA_WANT_ALG_ECDH
	imply MBEDTLS_PSA_BUILTIN_ALG_ECDH
	imply PSA_WANT_ALG_ECDSA
	imply PSA_WANT_ALG_DETERMINISTIC_ECDSA
	imply PSA_WANT_ALG_STREAM_CIPHER
	imply PSA_WANT_ECC_SECP_R1_256
	imply PSA_WANT_ECC_MONTGOMERY_255

config SIDEWALK_LOG
	bool "Enable Sidewalk log module"
	imply LOG

if SIDEWALK_LOG

config SIDEWALK_LOG_MSG_LENGTH_MAX
	int "Log message max length"
	default 80
	help
	  Maxium message length for Sidewalk PAL log in bytes.

module = SIDEWALK
module-str = Amazon Sidewalk
source "${ZEPHYR_BASE}/subsys/logging/Kconfig.template.log_config"

if SIDEWALK_CRYPTO
module = SIDEWALK_CRYPTO
module-str = Amazon Sidewalk Crypto
source "${ZEPHYR_BASE}/subsys/logging/Kconfig.template.log_config"
endif # SIDEWALK_CRYPTO

endif # SIDEWALK_LOG

config SIDEWALK_MFG_STORAGE
	bool "Enable Sidewalk manufacturing storage module"
	imply FLASH

config SIDEWALK_STORAGE
	bool "Enable Sidewalk storage module"
	imply NVS
	imply FLASH

config SIDEWALK_TIMER
	bool "Enable Sidewalk timer module"

config SIDEWALK_UPTIME
	bool "Enable Sidewalk uptime module"

config SIDEWALK_CRITICAL_REGION
	bool "Enable Sidewalk critical region module"

config SIDEWALK_ACE_OSAL_ZEPHYR
	bool "Enable Zephyr RTOS abstraction layer for Sidewalk"
