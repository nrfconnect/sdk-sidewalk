#
# Copyright (c) 2022 Nordic Semiconductor ASA
#
# SPDX-License-Identifier: LicenseRef-Nordic-4-Clause
#

menuconfig SIDEWALK
	bool "Enable Amazon Sidewalk [EXPERIMENTAL]"
	imply SIDEWALK_ASSERT
	imply SIDEWALK_BLE
	imply SIDEWALK_CRYPTO 
	imply SIDEWALK_LOG
	imply SIDEWALK_MFG_STORAGE
	imply SIDEWALK_STORAGE
	imply SIDEWALK_TIMER
	imply SIDEWALK_UPTIME
	imply SIDEWALK_CRITICAL_REGION
	imply SIDEWALK_ACE_OSAL_ZEPHYR
	imply SIDEWALK_SW_INTERRUPTS
	imply SIDEWALK_DELAY

choice SIDEWALK_LINK_MASK
	prompt "Physical link type"
	default SIDEWALK_LINK_MASK_BLE
	help
	  Select the physical link type for Sidewalk connection.

config SIDEWALK_LINK_MASK_BLE
	bool "Bluetooth Low Energy link"
	depends on SIDEWALK_BLE

config SIDEWALK_LINK_MASK_FSK
	bool "900 MHz link for FSK"
	depends on (SIDEWALK_GPIO && SIDEWALK_SPI_BUS && SIDEWALK_TEMPERATURE)

config SIDEWALK_LINK_MASK_LORA
	bool "900 MHz link for LORA"
	depends on (SIDEWALK_GPIO && SIDEWALK_SPI_BUS && SIDEWALK_TEMPERATURE)

endchoice # SIDEWALK_LINK_MASK

config SIDEWALK_BLE
	bool "Enable Sidewalk Bluetooth Low Energy (BLE) module"
	imply BT
	imply SETTINGS
	imply BT_PERIPHERAL

if SIDEWALK_BLE

choice SIDEWALK_BLE_MAC_ADDR_TYPE
	prompt "BLE MAC address type"
	default MAC_ADDRESS_TYPE_RANDOM_PRIVATE_RESOLVABLE

config MAC_ADDRESS_TYPE_PUBLIC
	bool "Public Address"
	help
	   Address obtained from IEEE registration authority, no privacy

config MAC_ADDRESS_TYPE_RANDOM_PRIVATE_NON_RESOLVABLE
	bool "Random Private Non-Resolvable Address"
	imply BT_SMP
	help
	   Random generated address non resolvable by remote
	   changes on every advertisement or connection

config MAC_ADDRESS_TYPE_STATIC_RANDOM
	bool "Random Static Address"
	help
	   Random generated address changes on each device boot up or
	   stay fixed for lifetime of device

config MAC_ADDRESS_TYPE_RANDOM_PRIVATE_RESOLVABLE
	bool "Random Private Resolvable Address"
	imply BT_SMP
	imply BT_PRIVACY
	help
	   Random generated address with IRK(Identity Resolving Key)
	   resolvable by remote. Used when bonding is enabled

endchoice # SIDEWALK_BLE_MAC_ADDR_TYPE

if MAC_ADDRESS_TYPE_PUBLIC
	config SID_BT_PUB_ADDR
	string "Public MAC address for controller"
	default "AA:FF:BB:EE:CC:DD"
	help
	  Specify a MAC address for the BLE interface in the form of
	  six hex 8-bit chars separated by colons (e.g.:
	  AA:BB:CC:DD:EE:FF).
endif # MAC_ADDRESS_TYPE_PUBLIC

choice SIDEWALK_BLE_ADV_INT
	prompt "BLE advertising interval timers"
	default BLE_ADV_FAST_INT_100_150_MS

config BLE_ADV_FAST_INT_30_60_MS
	bool "MIN/MAX: 30/60 ms"

config BLE_ADV_FAST_INT_100_150_MS
	bool "MIN/MAX: 100/150 ms"

config BLE_ADV_SLOW_INT_1000_1200_MS
	bool "MIN/MAX: 1/1.2 s"
endchoice # SIDEWALK_BLE_ADV_INT

config SIDEWALK_VENDOR_SERVICE
	bool "Enable vendor service"
	default n
	help
	   "Enables the vendor service for Sidewalk."

config SIDEWALK_LOGGING_SERVICE
	bool "Enable logging service"
	default n
	help
	   "Enables the logging service for Sidewalk."

endif # SIDEWALK_BLE

config SIDEWALK_THREAD_STACK_SIZE
	int "Stack size for the Sidewalk thread"
	range 8192 131072
	default 8192
	help
	  Set the internal stack size for Sidewalk thread.

config SIDEWALK_THREAD_QUEUE_SIZE
	int "Message queue size for the Sidewalk thread"
	range 4 256
	default 10
	help
	  Set the message queue size for the Sidewalk thread.

config SIDEWALK_THREAD_PRIORITY
	int "Priority of the Sidewalk thread"
	default 14
	range -16 14
	help
	  Priority at which the Sidewalk thread runs.

config SIDEWALK_HEAP_SIZE
	int "Heap size for Sidewalk utils"
	default 1024 if SIDEWALK_ACE_OSAL_ZEPHYR
	default 0
	help
	  Set the heap size for dynamic memory alocation in Sidewalk.

config SIDEWALK_ASSERT
	bool "Enable Sidewalk assert module."
	imply ASSERT
	help
	  This enables the SID_PAL_ASSERT() macro in the Sidewalk pal code.
	  If the assertion fails, program will trigger a fatal error.

config SIDEWALK_CRYPTO
	bool "Enable Sidewalk security module"
	imply NRF_SECURITY
	imply PSA_DEFAULT_OFF
	imply PSA_CRYPTO_DRIVER_OBERON
	imply PSA_WANT_ALG_HMAC
	imply PSA_WANT_ALG_CTR
	imply PSA_WANT_ALG_GCM
	imply PSA_WANT_ALG_CMAC
	imply PSA_WANT_ALG_SHA_256
	imply PSA_WANT_ALG_ECDH
	imply PSA_WANT_ALG_ECDSA
	imply PSA_WANT_ALG_DETERMINISTIC_ECDSA
	imply PSA_WANT_ALG_STREAM_CIPHER
	imply PSA_WANT_ECC_SECP_R1_256
	imply PSA_WANT_ECC_MONTGOMERY_255
	imply PSA_WANT_KEY_TYPE_AES
	imply PSA_WANT_KEY_TYPE_ECC_KEY_PAIR
	imply PSA_WANT_KEY_TYPE_HMAC
	imply MBEDTLS_PSA_BUILTIN_ALG_CMAC
	imply MBEDTLS_PSA_BUILTIN_ALG_HMAC

config SIDEWALK_LOG
	bool "Enable Sidewalk log module"
	imply LOG

config SIDEWALK_CLI
	bool "Enable sidewalk CLI"
	imply SHELL

config SIDEWALK_GENERATE_VERSION_MINIMAL
	bool
	default y
	help
	  Generate minimal information of application version (sidewalk, zephyr, nrf). 
	  In order to generate full version report from all modules set this config to `N`.

if SIDEWALK_LOG

config SIDEWALK_LOG_MSG_LENGTH_MAX
	int "Log message max length"
	default 80
	help
	  Maxium message length for Sidewalk PAL log in bytes.

module = SIDEWALK
module-str = Amazon Sidewalk
source "${ZEPHYR_BASE}/subsys/logging/Kconfig.template.log_config"

if SIDEWALK_CRYPTO
module = SIDEWALK_CRYPTO
module-str = Amazon Sidewalk Crypto
source "${ZEPHYR_BASE}/subsys/logging/Kconfig.template.log_config"
endif # SIDEWALK_CRYPTO

endif # SIDEWALK_LOG

config SIDEWALK_MFG_STORAGE
	bool "Enable Sidewalk manufacturing storage module"
	imply FLASH

config SIDEWALK_STORAGE
	bool "Enable Sidewalk storage module"
	imply NVS
	imply FLASH

config SIDEWALK_TIMER
	bool "Enable Sidewalk timer module"

config SIDEWALK_UPTIME
	bool "Enable Sidewalk uptime module"

config SIDEWALK_CRITICAL_REGION
	bool "Enable Sidewalk critical region module"

config SIDEWALK_GPIO
	bool "Enable Sidewalk GPIO module."
	imply SIDEWALK_LOG

config SIDEWALK_ACE_OSAL_ZEPHYR
	bool "Enable Zephyr RTOS abstraction layer for Sidewalk"

config SIDEWALK_TEMPERATURE
	bool "Enable Sidewalk temperature module"
	imply SENSOR
	imply TEMP_NRF5

config SIDEWALK_SW_INTERRUPTS
	bool "Enable Sidewalk software interrupts module"

config SIDEWALK_DELAY
	bool "Enable Sidewalk delay module"
	
config SIDEWALK_SPI_BUS
	bool "Enable SPI bus interface for sidewalk"
	imply SPI
	imply SIDEWALK_GPIO

module = SPI_BUS
module-str = Sidewalk spi bus interface
source "${ZEPHYR_BASE}/subsys/logging/Kconfig.template.log_config"

# Hidden configuration (experimental)
config SIDEWALK_SWI_PRIORITY
	int
	default 0

config SIDEWALK_SWI_STACK_SIZE
	int
	default 4096

config SIDEWALK_GPIO_IRQ_PRIORITY
	int
	default 1

config SIDEWALK_GPIO_IRQ_STACK_SIZE
	int
	default 2048
