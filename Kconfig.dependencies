#
# Copyright (c) 2023 Nordic Semiconductor ASA
#
# SPDX-License-Identifier: LicenseRef-Nordic-5-Clause
#

choice LIBC_IMPLEMENTATION
	default NEWLIB_LIBC
endchoice

config SIDEWALK_DEFAULTS
	bool
	default SIDEWALK
	imply REQUIRES_FULL_LIBC
	imply FPU
	imply REBOOT

config SIDEWALK_BUILD
	bool
	default SIDEWALK
	help
	  An internal config to build the NCS Sidewalk Sources.

config SIDEWALK_TFM_SUPPORT
	bool "Sidewalk support for TF-M [EXPERIMENTAL]"
	select EXPERIMENTAL
	default SIDEWALK && BUILD_WITH_TFM

config SIDEWALK_BLE
	bool
	default SIDEWALK
	imply BT
	imply BT_PERIPHERAL
	imply BT_CTLR_CONN_RSSI
	imply BT_CTLR_TX_PWR_DYNAMIC_CONTROL
	imply BT_CTLR_ADVANCED_FEATURES
	imply BT_EXT_ADV
	imply BT_GATT_AUTHORIZATION_CUSTOM
	help
		Sidewalk Bluetooth Low Energy (BLE) module

config SIDEWALK_BLE_NAME
	string "BLE name adverticed for Sidewalk"
	default "SID_APP"

config BT_ID_MAX
	default 3 if SIDEWALK_DFU
	default 2 

config SIDEWALK_ASSERT
	bool
	default SIDEWALK
	imply ASSERT
	help
	  This enables the SID_PAL_ASSERT() macro in the Sidewalk pal code.
	  If the assertion fails, program will trigger a fatal error.

config SIDEWALK_CRYPTO
	bool
	default SIDEWALK
	imply NRF_SECURITY
	imply HW_CC3XX
	imply PSA_CRYPTO_DRIVER_CC3XX
	imply PSA_WANT_ALG_HMAC
	imply PSA_WANT_ALG_CTR
	imply PSA_WANT_ALG_GCM
	imply PSA_WANT_ALG_CMAC
	imply PSA_WANT_ALG_ECB_NO_PADDING
	imply PSA_WANT_ALG_SHA_256
	imply PSA_WANT_ALG_ECDH
	imply PSA_WANT_ALG_ECDSA
	imply PSA_WANT_ALG_DETERMINISTIC_ECDSA
	imply PSA_WANT_ALG_STREAM_CIPHER
	imply PSA_WANT_ALG_CCM
	imply PSA_WANT_ALG_GCM
	imply PSA_WANT_ALG_PURE_EDDSA
	imply PSA_WANT_ECC_SECP_R1_256
	imply PSA_WANT_ECC_MONTGOMERY_255
	imply PSA_WANT_ECC_TWISTED_EDWARDS_255
	imply PSA_WANT_KEY_TYPE_AES
	imply PSA_WANT_KEY_TYPE_ECC_KEY_PAIR_IMPORT
	imply PSA_WANT_KEY_TYPE_ECC_KEY_PAIR_EXPORT
	imply PSA_WANT_KEY_TYPE_ECC_KEY_PAIR_GENERATE
	imply PSA_WANT_KEY_TYPE_HMAC
	imply PSA_WANT_GENERATE_RANDOM
	imply MBEDTLS_ENABLE_HEAP
	help
	   Sidewalk security module

config SIDEWALK_SECURE_KEY
	bool
	default SIDEWALK_CRYPTO_PSA_KEY_STORAGE
	imply MBEDTLS_PSA_CRYPTO_STORAGE_C
	imply TRUSTED_STORAGE if !BUILD_WITH_TFM
	imply HW_UNIQUE_KEY if !BUILD_WITH_TFM
	imply HW_UNIQUE_KEY_RANDOM if !BUILD_WITH_TFM
	imply HW_UNIQUE_KEY_WRITE_ON_CRYPTO_INIT if !BUILD_WITH_TFM
	imply TFM_ITS_ENCRYPTED if BUILD_WITH_TFM
	help
	  Sidewalk persistent keys storage module

if SIDEWALK_CRYPTO

choice CC3XX_LOCK_VARIANT
	default CC3XX_ATOMIC_LOCK if SOC_NRF52840
	default CC3XX_HW_MUTEX_LOCK if SOC_NRF5340_CPUAPP
endchoice

config PSA_WANT_ALG_SHA_512
	default y if SOC_SERIES_NRF54LX

config PSA_WANT_ALG_CHACHA20_POLY1305
	default n

config PSA_WANT_ALG_SHA_224
	default n

config PSA_WANT_ALG_SHA_384
	default n

config PSA_WANT_ALG_CBC_NO_PADDING
	default n

config PSA_WANT_ALG_CBC_PKCS7
	default n

config PSA_WANT_ALG_HKDF
	default n

endif #SIDEWALK_CRYPTO

config SIDEWALK_LOG
	bool
	default SIDEWALK
	imply LOG
	help
	  Sidewalk log module

config SIDEWALK_MFG_STORAGE
	bool
	default SIDEWALK && !DEPRECATED_SIDEWALK_MFG_STORAGE
	imply FLASH
	imply FPROTECT
	imply SIDEWALK_TLV
	imply SIDEWALK_TLV_FLASH
	imply SIDEWALK_TLV_RAM
	help
	  Sidewalk manufacturing storage module
	  Supports: tlv parser, secure key storage and memory protection

config SIDEWALK_MFG_STORAGE_DIAGNOSTIC
	bool
	default SIDEWALK_ON_DEV_CERT
	depends on SIDEWALK_MFG_STORAGE || DEPRECATED_SIDEWALK_MFG_STORAGE
	help
	  Enable mfg storage diagnostic functionalities

config SIDEWALK_STORAGE
	bool
	default SIDEWALK
	imply NVS if !SOC_FLASH_NRF_RRAM
	imply NVS_LOOKUP_CACHE if !SOC_FLASH_NRF_RRAM
	imply NVS_LOOKUP_CACHE_FOR_SETTINGS if !SOC_FLASH_NRF_RRAM
	imply ZMS if SOC_FLASH_NRF_RRAM
	imply ZMS_LOOKUP_CACHE if SOC_FLASH_NRF_RRAM
	imply ZMS_LOOKUP_CACHE_FOR_SETTINGS if SOC_FLASH_NRF_RRAM
	imply FLASH_MAP
	imply FLASH
	imply SETTINGS
	help
	  Sidewalk storage module

config SIDEWALK_TIMER
	bool
	default SIDEWALK
	imply SIDEWALK_UPTIME
	imply SIDEWALK_CRITICAL_REGION
	help
	  Sidewalk timer module

config SIDEWALK_UPTIME
	bool
	default SIDEWALK
	help
	  Sidewalk uptime module

config SIDEWALK_CRITICAL_REGION
	bool
	default SIDEWALK
	help
	   Sidewalk critical region module

if SIDEWALK_CRITICAL_REGION

config SIDEWALK_CRITICAL_REGION_RE_ENTRY_MAX
	int
	default 8
	help
	  Maximum nesting level of critical region
	  If the nesting level becomes greater than set by this config, assert will be triggered.

endif # SIDEWALK_CRITICAL_REGION

config SIDEWALK_GPIO
	bool
	default SIDEWALK_SUBGHZ_SUPPORT
	imply SIDEWALK_LOG
	help
	  Sidewalk GPIO module

config SIDEWALK_GPIO_MAX
	int
	default 12 if SIDEWALK_SUBGHZ_SUPPORT
	default 0
	help
	  Maximum number of GPIO assigned for use with Sidewalk GPIO API

config SIDEWALK_ACE_OSAL_ZEPHYR
	bool
	default SIDEWALK
	help
	  Zephyr RTOS abstraction layer for Sidewalk

config SIDEWALK_TEMPERATURE
	bool
	default SIDEWALK_SUBGHZ_SUPPORT
	imply SENSOR
	imply TEMP_NRF5
	help
	  Sidewalk temperature module

config SIDEWALK_SW_INTERRUPTS
	bool
	default SIDEWALK
	help
	  Sidewalk software interrupts module

config SIDEWALK_DELAY
	bool
	default SIDEWALK
	help
	  Sidewalk delay module

config SIDEWALK_SPI_BUS
	bool
	default SIDEWALK_SUBGHZ_SUPPORT
	imply SPI
	imply SIDEWALK_GPIO
	imply PM
	imply PM_DEVICE
	help
	  SPI bus interface for sidewalk

# Hidden configuration (experimental)
config SIDEWALK_SWI_PRIORITY
	int
	default 0

config SIDEWALK_SWI_STACK_SIZE
	int
	default 4096

config SIDEWALK_GPIO_IRQ_PRIORITY
	int
	default 1

config SIDEWALK_GPIO_IRQ_STACK_SIZE
	int
	default 2048

config SIDEWALK_THREAD_TIMER
	bool
	default n

if SIDEWALK_THREAD_TIMER
config SIDEWALK_TIMER_PRIORITY
	int
	default 2

config SIDEWALK_TIMER_STACK_SIZE
	int
	default 2048
endif # Hidden configuration (experimental)
