name: Build Sidewalk samples
on:
  workflow_call:
    inputs:
      nrf_revision:
        type: string
        required: false
        default: "main"
      boards_to_test:
        type: string
        required: true
        default: '["nrf52840dk/nrf52840", "nrf5340dk/nrf5340/cpuapp", "nrf54l15dk/nrf54l15/cpuapp", "nrf54l15dk/nrf54l15/cpuapp/ns", "nrf54l15dk/nrf54l10/cpuapp"]'

jobs:
  build_and_run_x86_tests:
    runs-on: ubuntu-24.04
    container:
      image: ghcr.io/nrfconnect/sdk-sidewalk:main
      options: --cpus 2
    defaults:
      run:
        shell: nrfutil toolchain-manager launch --install-dir /root/ncs bash -- {0}

    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: sidewalk

      - name: update NRF
        run: |
          cd sidewalk &&  git rev-parse HEAD > /workdir/sidewalk_hash && cd .. &&
          cp -r /workdir/nrf nrf;
          west init -l nrf &&
          cd nrf &&
          git fetch origin ${{inputs.nrf_revision}}:PR-branch &&
          git checkout PR-branch &&
          cd .. &&
          west config manifest.group-filter +sidewalk &&
          west update -n -o=--depth=1 --path-cache /workdir/ &&
          cd sidewalk && git checkout `cat /workdir/sidewalk_hash` && rm -rf /workdir/sidewalk_hash

      - name: Install Python dependencies
        run: |
          python3 -m pip install -r nrf/scripts/requirements.txt -r zephyr/scripts/requirements.txt -r sidewalk/scripts/ci/requirements.txt

      - name: Twister build and run x86 tests
        run: |
          source zephyr/zephyr-env.sh
          west twister --test-config sidewalk/test_config.yaml --level="Github_tests" --testsuite-root sidewalk --platform native_sim --platform native_posix --platform unit_testing --coverage --coverage-basedir sidewalk --coverage-formats html,xml --enable-ubsan --enable-lsan --enable-asan --inline-logs --overflow-as-errors -vvv

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: tests-x86_result
          path: |
            twister-out/twister.xml
            twister-out/**/handler.log
            twister-out/**/device.log
            twister-out/coverage

      - name: Code Coverage Summary Report
        uses: irongut/CodeCoverageSummary@v1.3.0
        with:
          filename: 'twister-out/coverage/coverage.xml'
          badge: true
          format: 'markdown'
          output: 'both'

      - name: publish coverage summary
        run: |
          cat code-coverage-results.md >> $GITHUB_STEP_SUMMARY


  build-and-test_on_hw:
    strategy:
      fail-fast: false
      matrix:
        subset: [1, 2, 3, 4]
        board: ${{ fromJson(inputs.boards_to_test) }}
    uses: ./.github/workflows/run_tests_dut.yml
    with:
      subset: ${{ matrix.subset }}
      max_subsets: 4
      run_tests: true
      target_board: ${{ matrix.board }}
      nrf_revision: ${{ inputs.nrf_revision }}

  merge_tests_on_hw:
    needs: build-and-test_on_hw
    runs-on: ubuntu-24.04
    if: always()
    permissions: write-all
    steps:
      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          delete-merged: true
          name: tests-dut_result
          pattern: tests-dut_result_*

      - name: Merge Artifacts
        uses: actions/upload-artifact/merge@v4
        with:
          delete-merged: true
          name: tests-dut_artifacts
          pattern: DUT_artifacts_*
