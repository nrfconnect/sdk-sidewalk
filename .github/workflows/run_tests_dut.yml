name: Build and run DUT tests
on:
  workflow_call:
    inputs:
      target:
        type: string
        required: true
      subset_config:
        type: string
        required: true
      subset:
        type: number
        required: true
      run_tests:
        description: ""
        required: false
        type: boolean
        default: true

jobs:
  build_dut_tests:
    if: inputs.subset <= fromJson(inputs.subset_config)[inputs.target]
    name: "Build ${{inputs.subset}}/${{fromJson(inputs.subset_config)[inputs.target]}} - ${{inputs.target}}"
    runs-on: ubuntu-24.04
    container:
      image: ghcr.io/nrfconnect/sdk-sidewalk:main
      options: --cpus 2
    defaults:
      run:
        shell: nrfutil toolchain-manager launch --install-dir /root/ncs bash -- {0}

    steps:
      - name: get_max_subset
        id: max_subset
        run: |
          echo '${{inputs.subset_config}}' > configuration.json
          max_subsets=$(jq --arg target_name "${{inputs.target}}" '.[($target_name)]' configuration.json)
          echo "max_subset=$max_subsets"
          echo "max_subset=$max_subsets" >> $GITHUB_OUTPUT

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: sidewalk

      - name: update NRF
        run: |
          rm -rf .west;
          west init -l sidewalk --mf west.yml &&
          west update -n -o=--depth=1 --path-cache /workdir/

      - name: Install Python dependencies
        run: |
          python3 -m pip install -r nrf/scripts/requirements.txt -r zephyr/scripts/requirements.txt -r sidewalk/scripts/ci/requirements.txt

      - name: Replace slash with underscore
        id: replace
        run: |
          TARGET_BOARD=${{ inputs.target }}
          TARGET_BOARD=${TARGET_BOARD//\//_}
          echo "target_board=$TARGET_BOARD" >> $GITHUB_OUTPUT

      - name: Ccache
        id: ccache
        uses: actions/cache@v4
        with:
          path: ~/.cache/ccache
          key: ccache-tests_dut-${{steps.replace.outputs.target_board}}-${{ github.run_id }}
          restore-keys: ccache-tests_dut-${{ steps.replace.outputs.target_board}}-

      - name: Build DUT test artifacts
        run: |
          source zephyr/zephyr-env.sh
          west twister --test-config sidewalk/test_config.yaml --level="Github_tests" --platform ${{inputs.target}} --testsuite-root sidewalk  --inline-logs --overflow-as-errors -vvv --prep-artifacts-for-testing --package-artifacts PACKAGE_ARTIFACTS_${{ inputs.subset }}.tar.bz2 --subset ${{ inputs.subset }}/${{steps.max_subset.outputs.max_subset}}

      - name: Print ccache stats
        run: |
          ccache -ps;

      - name: Save build artifacts
        uses: actions/upload-artifact@v4
        with:
          path: PACKAGE_ARTIFACTS_${{ inputs.subset }}.tar.bz2
          name: DUT_artifacts_${{steps.replace.outputs.target_board}}_${{ inputs.subset }}
          include-hidden-files: true

  run_dut_ut:
    needs: [build_dut_tests]
    if: ${{ fromJson(inputs.run_tests) }} and ${{ inputs.subset <= fromJson(inputs.subset_config)[inputs.target]}}
    name: "Run ${{inputs.subset}}/${{fromJson(inputs.subset_config)[inputs.target]}} - ${{inputs.target}}"
    runs-on: [self-hosted, linux, x64, "${{inputs.target}}"]
    container:
      image: ghcr.io/nrfconnect/sdk-sidewalk:main
      options: --cpus 2 --privileged
      volumes:
        - /dev:/dev
        - /run/udev:/run/udev
    permissions: write-all
    defaults:
      run:
        shell: nrfutil toolchain-manager launch --install-dir /root/ncs bash -- {0}

    steps:
      - name: clean artifacts
        if: always()
        run: |
          rm -rf PACKAGE_ARTIFACTS* twister-out*
          rm -rf sidewalk
          rm -rf .west

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: sidewalk

      - name: update NRF
        run: |
          rm -rf .west;
          west init -l sidewalk --mf west.yml &&
          west update -n -o=--depth=1 --path-cache /workdir/

      - name: Replace slash with underscore
        id: replace
        run: |
          TARGET_BOARD=${{ inputs.target }}
          TARGET_BOARD=${TARGET_BOARD//\//_}
          echo "target_board=$TARGET_BOARD" >> $GITHUB_OUTPUT

      - name: Install Python dependencies
        run: |
          python3 -m pip install -r sidewalk/scripts/ci/requirements.txt

      - name: Download artifacts
        uses: actions/download-artifact@v4
        with:
          name: DUT_artifacts_${{steps.replace.outputs.target_board}}_${{ inputs.subset }}

      - name: Unwrap artifacts
        run: |
          tar -xf PACKAGE_ARTIFACTS_${{ inputs.subset }}.tar.bz2

      - name: Run Tests
        run: |
          source zephyr/zephyr-env.sh
          west twister --no-clean -vvv --inline-logs --test-only --hardware-map /__w/hardware_map.yaml --device-testing -T sidewalk --retry-failed 2 --west-flash="--recover,--erase"

      - name: rename_twister_xml_report
        run: |
          mv twister-out/twister.xml twister-out/${{steps.replace.outputs.target_board}}_${{ inputs.subset }}_twister.xml

      - name: Upload test results
        uses: actions/upload-artifact@v4
        if: always()
        with:
          name: tests-dut_result_${{steps.replace.outputs.target_board}}_${{ inputs.subset }}
          path: |
            twister-out/${{steps.replace.outputs.target_board}}_twister.xml
            twister-out/**/handler.log
            twister-out/**/device.log
            twister-out/**/zephyr.hex
            twister-out/**/zephyr.elf
          include-hidden-files: true

      - name: clean artifacts
        if: always()
        run: |
          rm -rf PACKAGE_ARTIFACTS* twister-out*
          rm -rf sidewalk_tmp
          rm -rf sidewalk
          rm -rf .west
