name: Build and run CLI tests
on:
  workflow_call:
    inputs:
      nrf_revision:
        type: string
        required: false
        default: "main"
      target_board:
        description: "target board for tests"
        type: string
        required: true

jobs:
  run_dut_ut:
    name: "Run DUT tests  (${{inputs.target_board}})"
    runs-on: [self-hosted, linux, x64, "${{inputs.target_board}}"]
    container:
      image: ghcr.io/nrfconnect/sdk-sidewalk:main
      options: --cpus 2 --privileged
      volumes:
        - /dev:/dev
        - /run/udev:/run/udev
    permissions: write-all
    defaults:
      run:
        shell: nrfutil toolchain-manager launch --install-dir /root/ncs bash -- {0}

    steps:
      - name: clean artifacts
        if: always()
        run: |
          rm -rf pytest-sidewalk
          rm -rf twister-out*
          rm -rf sidewalk
          rm -rf .west

      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          path: sidewalk

      - name: update NRF
        run: |
          rm -rf .west;
          west init -l sidewalk --mf west.yml &&
          west update -n -o=--depth=1 --path-cache /workdir/

      - name: Replace slash with underscore
        id: replace
        run: |
          TARGET_BOARD=${{ inputs.target_board }}
          TARGET_BOARD=${TARGET_BOARD//\//_}
          echo "target_board=$TARGET_BOARD" >> $GITHUB_OUTPUT

      - name: Install Python dependencies
        run: |
          python3 -m pip install -r sidewalk/scripts/ci/requirements.txt

      - name: Download tests
        run: |
          git clone ssh://git@bitbucket.nordicsemi.no:7999/ama-things/pytest-sidewalk.git
          cd pytest-sidewalk
          python3 -m venv .venv
          source .venv/bin/activate
          pip install -r requirements.txt
          cd utils
          git clone ssh://git@bitbucket.nordicsemi.no:7999/ama-things/sidewalk-fuota.git
          cd sidewalk-fuota
          ./setup.sh

      - name: Build dut sample
        run: |
          source zephyr/zephyr-env.sh
          cd sidewalk/sample/sid_end_device
          west build -b ${{ inputs.target_board }} -DOVERLAY_CONFIG="overlay-dut.conf"

      - name: Flash dut sample
        run: |
          source zephyr/zephyr-env.sh
          cd sidewalk/sample/sid_end_device
          west flash

      - name: Flash mfg_hex
        if: ${{ inputs.target_board }} == "nrf54l15dk/nrf54l15/cpuapp"
        run: |
          nrfjprog --program pytest-sidewalk/test_objects/mfg/BFFFEA01CA/PCA10156/mfg_v8.hex --sectorerase --verify -r

      - name: Flash mfg_hex
        if: ${{ inputs.target_board }} != "nrf54l15dk/nrf54l15/cpuapp"
        run: |
          nrfjprog --program pytest-sidewalk/test_objects/mfg/BFFFEA01CA/mfg_v8.hex --sectorerase --verify -r

      - name: Run Tests
        run: |
          source zephyr/zephyr-env.sh
          cd pytest-sidewalk
          source .venv/bin/activate
          pytest tests/test_sid_dut.py --segger=$(yq '.[0].id' /__w/hardware_map.yaml | tr -d \") --sid-device BFFFEA01CA  --html=report.html --self-contained-html

      - name: clean artifacts
        if: always()
        run: |
          rm -rf pytest-sidewalk
          rm -rf twister-out*
          rm -rf sidewalk_tmp
          rm -rf sidewalk
          rm -rf .west
